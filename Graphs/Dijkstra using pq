class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        priority_queue<pair<int,int>,vector<pair<int,int>>, greater<pair<int,int>>>pq;
        vector<int>dist(V);
        for(int i=0; i<V; i++) dist[i] = 1e9;
        
        dist[S] = 0;
        pq.push({0,S});
        
        
        while(!pq.empty()) {
            int dis = pq.top().first;
            int node = pq.top().second;
            
            pq.pop();
            
            for(auto it : adj[node]) {
                int edge = it[0];
                int edgeWeight = it[1];
                
                if(dis + edgeWeight < dist[edge]) {
                    dist[edge] = dist[node] + edgeWeight;
                    pq.push({dist[edge],edge});
                }
                
            }
        }
        return dist;
    }
};