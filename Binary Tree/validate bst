/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        if(root==nullptr) {
            return true;
        }
        TreeNode* mn = nullptr;
        TreeNode* mx = nullptr;
        return traverse(root,mn,mx);
    }
    
    bool traverse(TreeNode* root, TreeNode* mn, TreeNode* mx)
    {
        if(root==nullptr) {
            return true;
        }
        if(mn != nullptr && root->val <= mn->val) {
            return false;
        }
        if(mx != nullptr && root->val >= mx->val) {
            return false;
        }
        return traverse(root->left,mn,root) && traverse(root->right,root,mx);
    }
};