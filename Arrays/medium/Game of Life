class Solution {
public:
     vector<int> ways_x = {0, 0, 1, 1, 1, -1, -1, -1};
    vector<int> ways_y = {1, -1, 1, -1, 0, 0, 1, -1};
    
    void gameOfLife(vector<vector<int>>& board) {
       
        for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[0].size();j++)
            {
                int nei = helper(i,j,board);
                
                if(board[i][j])
                {
                    if(nei == 2 || nei == 3)
                    {
                        board[i][j] = 3;
                    }
                }
                else if(nei == 3)
                {
                    board[i][j] = 2;
                }
            }
        }
        
        updateBoard(board);
    }
    
    
    void updateBoard(vector<vector<int>>&board)
    {
        for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[0].size();j++)
            {
               if(board[i][j]==3 || board[i][j]==2)
               {
                   board[i][j]=1;
               }
                else {
                    board[i][j]=0;
                }
            }
        }
    }
    
    
    int helper(int row,int col, vector<vector<int>>&board)
    {
        int nei=0;
        for(int i=0;i<8;i++)
        {
            int nr = row+ways_x[i];
            int nc = col+ways_y[i];
            
            if(nr>=0 && nr<board.size() && nc>=0 && nc<board[0].size() && (board[nr][nc] == 1 || board[nr][nc] ==3))
            {
                nei++;
            }
        }
        return nei;
    }
};