https://leetcode.com/problems/remove-duplicates-from-sorted-list/


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        // dummy node for returning the head
        ListNode *dummy = new ListNode();
//      another node to traverse the new ll
        ListNode *p = dummy;
        
        while(l1!=nullptr && l2!=nullptr) {
            if(l1->val <= l2->val) {
                p->next=l1;
                l1=l1->next;
            }
            else {
                p->next=l2;
                l2=l2->next;
            }
            p=p->next;
        }
        
//         if there as still some nodes left in l1 or l2
        p->next = (l1!=nullptr) ? l1 : l2 ;
        
        // retur the dummy->next as head
        return dummy->next;
        
    }
};