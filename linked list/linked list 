linked list insertion,deletion concepts

#include <bits/stdc++.h> 
using namespace std; 

struct Node{
    int data;
    Node* next;
    Node(int x){
        data=x;
        next=NULL;
    }
};
struct Node *head=NULL;

Node *insertBegin(int x){
    Node *temp=new Node(x);
    temp->next=head;
    head=temp;
    return head;
    
}

Node *insertEnd(int x) {
    Node *temp = new Node(x);
    if(head==nullptr) {
        head=temp;
        return head;
    }
    Node* curr = head;
    while(curr->next) {
        curr = curr->next;
    }
    curr->next = temp;
    return head;
}

Node *insertPos(int pos,int x) {
    Node *temp = new Node(x);
    if(pos==1) {
        temp->next=head;
        head=temp;
        return head;
    }
    Node *curr = head;
    for(int i=1;i<pos;i++) {
        curr=curr->next;
    }
    temp->next = curr->next;
    curr->next=temp;
    return head;
}

void *deleteNode() {
    if(head==nullptr) {
        return nullptr;
    }
    Node *temp = head->next;
    delete head;
    head=temp;
    return temp;
}

void *deleteEndNode() {
    if(head==nullptr) return nullptr;
    if(head->next==nullptr) return nullptr;
    Node *curr = head;
    while(curr->next->next) {
        curr=curr->next;
    }
    delete(curr->next);
    curr->next = nullptr;
    return head;
}

void printlist(Node *head){
        Node *curr=head;
        while(curr!=NULL){
        cout<<curr->data<<" ";
        curr=curr->next;
        }
}
int main() 
{ 
	
	insertBegin(30);
	insertBegin(20);
	insertBegin(10);
	insertEnd(50);
    insertEnd(90);
    deleteNode();
    deleteEndNode();
    insertPos(2,80);
	printlist(head);
	return 0;
} 
