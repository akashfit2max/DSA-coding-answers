class Solution {
public:
    void findCombi(int ind, int target, vector<int>&arr, vector<vector<int>>&ans, vector<int>&ds)
    {
        if(target==0)
        {
            ans.push_back(ds);
        }
        
        if(ind == arr.size()) return;
        
        if(arr[ind] > target) return;
        
        ds.push_back(arr[ind]);
        findCombi(ind+1,target-arr[ind],arr,ans,ds);
        ds.pop_back();
        while(ind+1 < arr.size() && arr[ind]==arr[ind+1]) ind++;
        findCombi(ind+1,target,arr,ans,ds);
    }
    
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(), candidates.end()) ;
        vector<vector<int>>ans;
        vector<int>ds;
        findCombi(0,target,candidates,ans,ds);
        return ans;
    }
};